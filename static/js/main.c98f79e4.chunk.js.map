{"version":3,"sources":["components/Editor.js","components/Preview.js","components/Card/Card.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Editor","onChange","markdownValue","id","value","Preview","renderer","marked","Renderer","link","href","title","text","setOptions","breaks","dangerouslySetInnerHTML","__html","Card","children","className","Footer","initialMd","App","state","handleChange","e","setState","target","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAYeA,EATA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,cAAb,OACb,0BAAUC,GAAG,SAASC,MAAOF,EAAeD,SAAUA,K,gBCsBzCI,EAtBC,SAAC,GAAuB,IAArBH,EAAoB,EAApBA,cACXI,EAAW,IAAIC,IAAOC,SAS5B,OARAF,EAASG,KAAO,SAASC,EAAMC,EAAOC,GACpC,MAAM,2BAAN,OAAkCF,EAAlC,YAA0CE,EAA1C,SAGFL,IAAOM,WAAW,CAChBC,QAAQ,IAIR,qBACEX,GAAG,UACHY,wBAAyB,CAAEC,OAAQT,IAAOL,EAAe,CAAEI,iBCMlDW,G,MAnBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUP,EAAb,EAAaA,MAAb,OACX,sBAAKQ,UAAU,OAAf,UACE,sBAAKA,UAAU,cAAf,UACE,sBAAMA,UAAU,oBAAhB,SAAqCR,IACrC,sBAAKQ,UAAU,sBAAf,UACE,sBAAMA,UAAU,aAChB,sBAAMA,UAAU,aAChB,sBAAMA,UAAU,mBAGpB,qBAAKA,UAAU,eAAf,SAA+BD,SCHpBE,G,MARA,kBACb,wBAAQD,UAAU,SAAlB,SACE,oECEEE,EAAS,ioBAqEAC,E,4MAjCbC,MAAQ,CACNrB,cAAemB,G,EAGjBG,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZxB,cAAeuB,EAAEE,OAAOvB,S,4CAI5B,WACE,IAAQF,EAAkB0B,KAAKL,MAAvBrB,cAER,OACE,sBAAKiB,UAAU,MAAf,UACE,oBAAIA,UAAU,YAAd,gCACA,uBAAMA,UAAU,cAAhB,UACE,cAAC,EAAD,CAAMR,MAAM,SAAZ,SACE,cAAC,EAAD,CACEV,SAAU2B,KAAKJ,aACftB,cAAeA,MAGnB,cAAC,EAAD,CAAMS,MAAM,UAAZ,SACE,cAAC,EAAD,CAAST,cAAeA,SAG5B,cAAC,EAAD,W,GA5BU2B,aC9BHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c98f79e4.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Editor = ({ onChange, markdownValue }) => (\r\n  <textarea id=\"editor\" value={markdownValue} onChange={onChange} />\r\n);\r\n\r\nEditor.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  markdownValue: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Editor;\r\n","import React from 'react';\r\nimport marked from 'marked';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Preview = ({ markdownValue }) => {\r\n  const renderer = new marked.Renderer();\r\n  renderer.link = function(href, title, text) {\r\n    return `<a target=\"_blank\" href=${href}>${text}</a>`;\r\n  };\r\n\r\n  marked.setOptions({\r\n    breaks: true\r\n  });\r\n\r\n  return (\r\n    <div\r\n      id=\"preview\"\r\n      dangerouslySetInnerHTML={{ __html: marked(markdownValue, { renderer }) }}\r\n    />\r\n  );\r\n};\r\n\r\nPreview.propTypes = {\r\n  markdownValue: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Preview;\r\n","import React from 'react';\r\nimport './Card.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Card = ({ children, title }) => (\r\n  <div className=\"Card\">\r\n    <div className=\"Card-header\">\r\n      <span className=\"Card-header-title\">{title}</span>\r\n      <div className=\"Card-header-circles\">\r\n        <span className=\"circle-1\" />\r\n        <span className=\"circle-2\" />\r\n        <span className=\"circle-3\" />\r\n      </div>\r\n    </div>\r\n    <div className=\"Card-content\">{children}</div>\r\n  </div>\r\n);\r\n\r\nCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"Footer\">\r\n    <span>\r\n      Proudly made by @itsvitaliio\r\n    </span>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Editor from './components/Editor';\nimport Preview from './components/Preview';\nimport Card from './components/Card/Card';\nimport Footer from './components/Footer/Footer';\n\nconst initialMd = `# Greetings Earthlings! \n## Welcome to my markdown previewer\n\n[freeCodeCamp](https://www.freecodecamp.org/)\n\nFront End Libraries Projects\n- Random Quote Machine\n- Markdown Previewer\n- Drum Machine\n- Javascript Calculator\n- Pomodoro Clock\n\nthis is a **bold** text, an _emphasis_ , a _**combined emphasis**_ , and a ~~strikethrough~~\n\nHead 1 | Head 2 | Head 3\n------ |--------| ------\nitem1 | item2 | item3\nitem4 | item5 | item6\nitem7 | item8 | item9\n\n> example of blockquote\n\nInline \\`code\\`\n\n\\`\\`\\`\n// code block\n\nfunction sum (x, y) {\n  return x + y;\n}\n\\`\\`\\`\n\n![Random Animals](https://loremflickr.com/320/240)\n`;\n\nclass App extends Component {\n  state = {\n    markdownValue: initialMd\n  };\n\n  handleChange = e => {\n    this.setState({\n      markdownValue: e.target.value\n    });\n  };\n\n  render() {\n    const { markdownValue } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App-title\">Markdown Previewer</h1>\n        <main className=\"App-content\">\n          <Card title=\"Editor\">\n            <Editor\n              onChange={this.handleChange}\n              markdownValue={markdownValue}\n            />\n          </Card>\n          <Card title=\"Preview\">\n            <Preview markdownValue={markdownValue} />\n          </Card>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}